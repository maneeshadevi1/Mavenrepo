#platform=86, AMD64, or Intel EM64T

#version=DEVEL
# System authorization information
auth --useshadow --enablemd5
# Install OS instead of upgrade
install
# Use graphical install
graphical
# Use hard drive installation media
harddrive --dir=None --partition=/dev/mapper/live-base
# Firewall configuration
firewall --enabled
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --drives=sdb
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=enp0s31f6 --ipv6=auto --no-activate
network  --hostname=localhost.localdomain

# Root password
rootpw --iscrypted $1$EnrOt4Hh$IcyXG3A2dFXgsi2m34Tbr.
# SELinux configuration
selinux --enforcing
# System services
services --disabled="network,sshd,chronyd" --enabled="NetworkManager"
# System timezone
timezone Asia/Kolkata --nontp
# X Window System configuration information
xconfig  --startxonboot
# System bootloader configuration
bootloader --location=mbr --password="passw0rd" --boot-drive=sda
# Partition clearing information
clearpart --all
# Disk partitioning information
part pv.143 --fstype="lvmpv" --size=487385 --encrypted
part /boot --fstype="ext4" --size=1000
volgroup vg_oc3200608260 --pesize=4096 pv.143
logvol swap  --fstype="swap" --grow --maxsize=12288 --size=1024 --name=lv_swap --vgname=vg_oc3200608260
logvol /  --fstype="ext4" --grow --maxsize=479997 --size=1024 --name=lv_root --vgname=vg_oc3200608260

%post
__NVIDIA=0

# Import GPG key
rpm --import /usr/share/doc/c4eb-release/RPM-GPG-KEY-c4eb
rpm --import /usr/share/doc/c4eb-release/RPM-GPG-KEY-c4eb-addon

# Set grub.conf
cat << EOF > /etc/default/grub
GRUB_TIMEOUT=5
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=false
GRUB_TERMINAL_OUTPUT=gfxterm
GRUB_CMDLINE_LINUX="vconsole.font=latarcyrheb-sun32 rhgb quiet"
GRUB_DISABLE_RECOVERY="false"
GRUB_TERMINAL_OUTPUT=gfxterm
GRUB_BACKGROUND=/boot/boot.png
EOF

# Get windows cleanup
if /usr/bin/dmidecode | grep -E "Manufacturer: VMware, Inc|Manufacturer: Bochs|Product Name: VirtualBox"; then
  [ -f /etc/skel/Desktop/get-windows.desktop ] && rm -f /etc/skel/Desktop/get-windows.desktop ||:
  [ -f /usr/share/applications/get-windows.desktop ] && rm -f /usr/share/applications/get-windows.desktop ||:
  [ -f /usr/bin/get-windows ] && rm -f /usr/bin/get-windows ||:
  rpm -e usbr > /dev/null 2>&1 ||:
fi

# Digital guardian
/bin/systemctl enable dgdaemon > /dev/null 2>&1 ||:

# openclient reinstall
/bin/systemctl disable iscsi.service > /dev/null 2>&1 ||:

# YOGA
if dmidecode -s system-version | grep -i "ThinkPad X1 Yoga" > /dev/null; then
mkdir -p /etc/dconf/db/local.d
cat << EOF > /etc/dconf/db/local.d/00-ibm-yoga-configuration
[org/gnome/desktop/interface]
document-font-name="Sans 11"
font-name="Cantarell 11"
monospace-font-name="Monospace 11"
clock-show-date=true
text-scaling-factor=1.1000000000000001
scaling-factor=uint32 1
EOF

# rebuild schema cache with any overrides we installed
glib-compile-schemas /usr/share/glib-2.0/schemas > /dev/null 2>&1 ||:

fi

# T480
if [ ! -f /etc/sysconfig/do-not-apply-t480 ]; then
if ! grep -i nouveau.modeset=0 /etc/default/grub > /dev/null 2>&1; then
  if dmidecode -s system-version | egrep -ie "ThinkPad T480|ThinkPad T490" > /dev/null; then
    source /etc/default/grub
    GRUB_CMDLINE_LINUX=$GRUB_CMDLINE_LINUX" nouveau.modeset=0 "
    sed -i "s|^GRUB_CMDLINE_LINUX=*.*|GRUB_CMDLINE_LINUX=\"$GRUB_CMDLINE_LINUX\"|" /etc/default/grub
    echo "Please reboot to apply workaround"
  fi
fi
fi

# Workaround P52 (for upgrade to 7.7, check openclient-anaconda also)
# P52 kernel panic 7.7
if dmidecode -s system-version | egrep "ThinkPad P52" > /dev/null 2>&1; then
  sed -i 's|^ExecStart=/sbin/rngd -f*.*|ExecStart=/sbin/rngd -f -x hwrng|g' /etc/systemd/system/multi-user.target.wants/rngd.service
  sed -i 's|^ExecStart=/sbin/rngd -f*.*|ExecStart=/sbin/rngd -f -x hwrng|g' /usr/lib/systemd/system/rngd.service
else
  sed -i 's|^ExecStart=/sbin/rngd -f*.*|ExecStart=/sbin/rngd -f|g' /etc/systemd/system/multi-user.target.wants/rngd.service
  sed -i 's|^ExecStart=/sbin/rngd -f*.*|ExecStart=/sbin/rngd -f|g' /usr/lib/systemd/system/rngd.service
fi
systemctl daemon-reload ||:

# NVIDIA
if [ "$__NVIDIA" == "1" ]; then
  if [ ! -f /etc/sysconfig/do-not-apply-p52 ]; then
    /sbin/plymouth-set-default-theme ibm-nvidia-install
    rm -f /etc/systemd/system/graphical.target.wants/firstboot-graphical.service
    [ -f /opt/ibm/nvidia/nvidia.run ] && ln -s /opt/ibm/nvidia/nvidia.run /etc/fba.d/nvidia.sh
  else
    rm -f /opt/ibm/nvidia/nvidia.run ||:
  fi
else
  rm -f /opt/ibm/nvidia/nvidia.run ||:
fi

# W54x video fix
if [ ! -f /etc/sysconfig/do-not-apply-w54x ]; then
if dmidecode -s system-version | egrep "ThinkPad W541|ThinkPad W540" > /dev/null 2>&1; then
  if [ -f /sys/kernel/debug/vgaswitcheroo/switch ]; then
    if grep "IGD*.*Pwr" /sys/kernel/debug/vgaswitcheroo/switch > /dev/null 2>&1; then 
      if [ ! -f /etc/X11/xorg.conf.d/20-intel.conf ]; then
        cat <<EOF> /etc/X11/xorg.conf.d/20-intel.conf 
Section "Device"
        Identifier  "Intel Graphics"
        Driver      "intel"
        Option      "DRI"       "false"
EndSection
EOF
      fi
    fi
  fi
fi
fi

# remove livesys service
/sbin/chkconfig --del livesys ||:
/sbin/chkconfig --del livesys-late ||:
[ -f /etc/rc.d/init.d/livesys ] && rm -f /etc/rc.d/init.d/livesys
[ -f /etc/rc.d/init.d/livesys-late ] && rm -f /etc/rc.d/init.d/livesys-late

#######################################
# yum.conf
sed -i "s|^installonly_limit*.*|#installonly_limit=3|g" /etc/yum.conf

#######################################
# fix ibmsam on reinstalls
sed -i "s|7.3 (Maipo)|7.4 (Maipo)|g" /var/opt/ibmsam/registry.ini ||:
sed -i "s|RHEL 7 4.30|RHEL 7 4.40|g" /var/opt/ibmsam/registry.ini ||:

#######################################
# registration issue on reinstalls
[ -f /etc/sysconfig/firstlogin ] && rm -f /etc/sysconfig/firstlogin

######################################
head -c 2880 /dev/urandom | uuencode -m - | head -n 65 | tail -n 64 > /etc/root.key
cryptsetup luksAddKey /dev/sda2 /etc/root.key --key-slot 7
! grep '/etc/root.key none' /etc/crypttab && cp /etc/crypttab /etc/crypttab.ibm && sed -i "s| none| /etc/root.key none|" /etc/crypttab
cat << EOF > /etc/dracut.conf.d/99-mypwfile.conf
install_items="/etc/root.key /etc/crypttab"
EOF

%end

%post --nochroot
DEV=$(blkid | grep "crypto_LUKS" | cut -d ":" -f1 | head -1)

echo 0c3ncryp7pa55 | cryptsetup luksAddKey ${DEV} /mnt/sysimage/etc/root.key --key-slot 7
! grep '/etc/root.key none' /mnt/sysimage/etc/crypttab && cp /mnt/sysimage/etc/crypttab /mnt/sysimage/etc/crypttab.ibm && sed -i "s| none| /etc/root.key none|" /mnt/sysimage/etc/crypttab
cat << EOF > /mnt/sysimage/etc/dracut.conf.d/99-mypwfile.conf
install_items="/etc/root.key /etc/crypttab"
EOF

mount --bind /dev /mnt/sysimage/dev
mount --bind /proc /mnt/sysimage/proc
mount --bind /sys /mnt/sysimage/sys
mount --bind /run /mnt/sysimage/run
chroot /mnt/sysimage sh -c "grub2-mkconfig -o /boot/grub2/grub.cfg"
umount /mnt/sysimage/dev
umount /mnt/sysimage/proc
umount /mnt/sysimage/sys
umount /mnt/sysimage/run
# Required for clone
[ -f /mnt/sysimage/etc/root.key ] && cp /mnt/sysimage/etc/root.key /mnt/sysimage/boot/root.key
%end

